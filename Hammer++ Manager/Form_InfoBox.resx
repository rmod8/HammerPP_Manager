<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="labelDescription.Text" xml:space="preserve">
    <value>Either a full installation or remnant files of a Hammer++ installation
exist in Source SDK Base 2013 Multiplayer's Folder.

You can either:
Delete it and re-install a fresh copy with 'Fresh Install' or
stop the download with 'Stop'.

Note: 'Fresh Install' will delete both the hammerplusplus.exe and it's data folder.
If you have any important data in the 'hammerplusplus' folder, back it up now!</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAECAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAALYAtwAAAAAAwADCLK0AqoifAZfVnAKN+ZwCjfmeAZTVqQCliL8AwSwAAAAAsQCwAAAA
        AAAAAAAAAAAAAAAAAADPANMCrACroowAhv90AGn/egNo/5EIc/+ECWX/fARo/3MAaf+HAIH/qAClosQA
        xAIAAAAAAAAAALcAuADPANQCoACc3GUAVP9eAEv/YgFL/3IGT/+cDWj/lg5i/3UITv9kAkz/XgBL/2MA
        Uf+WAJHcxwDGAq4ArQAAAAAAqgCronEAaP9nAFz/aABd/3ECX/+ICWL/tBxz/7Aibv+NC2L/dAJh/2kA
        Xf9nAF3/bgBk/6IAoqIAAAAAuQC5LI0AhP+GAIT/xgDJ/8YAyP+NA4L/mw1q/50MJv+dDCb/oA5q/4IE
        cf/HAMj/xgDJ/5EAkf+HAHz/rwCuLKQAoIhgAE7/ggB+/78Awv/AAMH/igN9/4wOU/+dDCb/nQwm/5MQ
        VP96BWX/wgDD/78Awf+PAI//XwBM/5cAkYikAKTUgQB+/4QAhP+/AMH/wAHA/44Dgf+mD3b/nQwm/50M
        Jv+rEHT/ggRx/8EBwf+/AMD/kACR/4IAfv+eAJ3UvgDA+r8Awv+/AML/vQC+/78Cu//IB7X/1hKi/50M
        Jv+dDCb/2BOe/8oItP/AA7r/vQC+/78AwP+/AML/vgDA+r4AwPq/AML/vwDB/78CvP/GB7P/0Q6l/+Aa
        kf+dDCb/nQwm/+Ibj//UEKP/xwix/8ACu/+/AMD/vwDC/74AwPqmAKbUgQB+/4UAg//EBLz/zgyp/50M
        Jv+dDCb/nQwm/50MJv+dDCb/nQwm/9IPpv/FBLn/kQCQ/4IAfv+fAJ7UqACliGEAT/+EAX7/xgW6/9QQ
        o/+dDCb/nQwm/50MJv+dDCb/nQwm/50MJv/ZFZ//xwe3/5EBjf9gAE3/nACWiL0AvSyRAIn/hwCD/8sE
        wf/XDqv/nQwm/54NJ/+bCyX/mwsm/50MJv+dDCb/2hKo/8wFvv+TAZD/igCB/7QAtCwAAAAArwCwonYA
        bP9vAlz/hAhe/6odaf/HMnL/2TZ5/9U3dP/JM3L/sSRt/4gKXv9xA13/cgBn/6cAqKIAAAAAugC7AM4A
        2AKpAKbcbABZ/2kDTP92CE//hg1R/6gTaP+iE2L/iQ5S/3gJT/9qBE3/aQFV/6AAnNzPANQCtQC2AAAA
        AAAAAAAA0QDZArIAsqKVAI7/egFt/30EZ/+UCXL/hgpl/38FZ/95AWv/kQCJ/64AraLOANQCAAAAAAAA
        AAAAAAAAAAAAALsAuwAAAAAAwwDFLLQAs4ipAaLVpAKZ+aUCmfmnAaDVsgCwiMIAxSwAAAAAuAC5AAAA
        AAAAAAAA8A8AAMADAACAAQAAgAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAEAAIAB
        AADAAwAA8A8AAA==
</value>
  </data>
</root>